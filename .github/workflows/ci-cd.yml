name: CI/CD Pipeline with Notifications

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test
      
    - name: Run linting
      run: npm run lint
      
    - name: Validate HTML
      run: npm run validate-html
      
    - name: Run accessibility tests
      run: npm run test:a11y

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Build for production
      run: npm run build:prod
      
    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: './src'

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  notify:
    needs: [test, build, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Send Success Email
      if: ${{ needs.test.result == 'success' && needs.build.result == 'success' && needs.deploy.result == 'success' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "‚úÖ PetLog CI/CD Pipeline - SUCCESS"
        body: |
          üéâ Great news! Your PetLog website has been successfully deployed!
          
          ‚úÖ All tests passed
          ‚úÖ Build completed successfully  
          ‚úÖ Deployed to production
          
          Your website is live at: ${{ needs.deploy.outputs.page_url || 'https://atejada1.github.io/petlog-blog/' }}

          
          Pipeline run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: petlog.pipeline@gmail.com
        from: PetLog CI/CD Pipeline
        
    - name: Send Failure Email
      if: ${{ needs.test.result == 'failure' || needs.build.result == 'failure' || needs.deploy.result == 'failure' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "‚ùå PetLog CI/CD Pipeline - FAILED"
        body: |
          ‚ö†Ô∏è Your PetLog CI/CD pipeline has failed!
          
          Test Status: ${{ needs.test.result }}
          Build Status: ${{ needs.build.result }}
          Deploy Status: ${{ needs.deploy.result }}
          
          Please check the pipeline logs for details:
          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          Fix the issues and push again to retry the deployment.
        to: petlog.pipeline@gmail.com
        from: PetLog CI/CD Pipeline